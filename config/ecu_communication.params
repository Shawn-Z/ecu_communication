#!/usr/bin/env python
from rosparam_handler.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("params_lock", paramtype="bool", description="lock of params", default=True, configurable=True)
gen.add("fake_issue", paramtype="bool", description="guess", default=False, configurable=True)

gen.add("fake_drive", paramtype="bool", description="guess", default=False, configurable=True)
gen.add_enum("work_mode", description="guess", entry_strings=["wrong", "curvature_speed", "speed", "curvature", "each_wheel", "halt"], default="curvature_speed")
gen.add_enum("driving_gear", description="guess", entry_strings=["N", "D", "R"], default="N")
gen.add("vehicle_speed", paramtype="double", description="guess", default=0, min=0, max=25, configurable=True)
gen.add("turn_to_left", paramtype="bool", description="guess", default=True, configurable=True)
gen.add("vehicle_curvature", paramtype="double", description="guess", default=0, min=0, max=1.3, configurable=True)
gen.add("left_wheel_forward", paramtype="bool", description="guess", default=True, configurable=True)
gen.add("right_wheel_forward", paramtype="bool", description="guess", default=True, configurable=True)
gen.add("left_wheel_speed", paramtype="double", description="guess", default=0, min=0, max=25, configurable=True)
gen.add("right_wheel_speed", paramtype="double", description="guess", default=0, min=0, max=25, configurable=True)
gen.add("vehicle_brake", paramtype="int", description="guess", default=0, min=0, max=100, configurable=True)
gen.add("park", paramtype="bool", description="guess", default=False, configurable=True)

gen.add("fake_suspension", paramtype="bool", description="guess", default=False, configurable=True)
gen.add_enum("cylinder_select", description="guess", entry_strings=["cylinder_select_none", "cylinder_select_left_1", "cylinder_select_left_2", "cylinder_select_left_3", "cylinder_select_left_4", "cylinder_select_right_1", "cylinder_select_right_2", "cylinder_select_right_3", "cylinder_select_right_4"], default="cylinder_select_none")
gen.add_enum("suspension_select", description="guess", entry_strings=["suspension_select_none", "suspension_select_1", "suspension_select_2", "suspension_select_3", "suspension_select_4", "suspension_select_1_3", "suspension_select_1_4", "suspension_select_2_3", "suspension_select_2_4"], default="suspension_select_none")
gen.add_enum("suspension_mode", description="guess", entry_strings=["suspension_mode_up_down", "suspension_mode_roll", "suspension_mode_pitch"], default="suspension_mode_up_down")
gen.add_enum("suspension_mode_detail", description="guess", entry_strings=["suspension_mode_detail_reserve", "suspension_mode_detail_up_left_front", "suspension_mode_detail_down_right_rear", "suspension_mode_detail_keep"], default="suspension_mode_detail_keep")
gen.add_enum("suspension_cylinder_select", description="guess", entry_strings=["suspension_cylinder_select_all", "suspension_cylinder_select_single"], default="suspension_cylinder_select_all")
gen.add("suspension_motor", paramtype="bool", description="guess", default=False, configurable=True)
gen.add_enum("vertical_wall_mode", description="guess", entry_strings=["vertical_wall_mode_normal", "vertical_wall_mode_up", "vertical_wall_mode_down"], default="vertical_wall_mode_normal")
gen.add("fix_two_chamber", paramtype="bool", description="guess", default=False, configurable=True)

gen.add("fake_functions", paramtype="bool", description="guess", default=False, configurable=True)
gen.add("ring", paramtype="bool", description="guess", default=False, configurable=True)
gen.add_enum("forward_light", description="guess", entry_strings=["forward_light_off", "forward_light_on", "forward_light_flash"], default="forward_light_off")
gen.add("wide_taillight", paramtype="bool", description="guess", default=False, configurable=True)
gen.add_enum("turn_light", description="guess", entry_strings=["turn_light_off", "left_on_right_off", "left_off_right_on", "turn_light_on", "left_flash_right_off", "left_off_right_flash", "turn_light_flash"], default="turn_light_off")
gen.add_enum("tailgate", description="guess", entry_strings=["tailgate_reserve", "tailgate_open", "tailgate_close", "tailgate_stop"], default="tailgate_stop")

exit(gen.generate("ecu_communication", "ecu_communication", "ecu_communication"))